# https://dev.azure.com/home-assistant

trigger:
  branches:
    include:
    - master
  tags:
    include:
    - '*'
    exclude:
    - untagged*
pr:
- master

variables:
  versionHadolint: 'v1.16.3'
  versionBuilder: '1.1'

jobs:

- job: 'Linter'
  pool:
    vmImage: 'ubuntu-16.04'
  steps:
  - script: sudo docker pull hadolint/hadolint:$(versionHadolint)
    displayName: 'Install Hadolint'
  - script: |
      set -e
      shopt -s globstar
      for dockerfile in **/Dockerfile
      do
        echo "Linting: $dockerfile"
        sudo docker run --rm -i \
          -v $(pwd)/.hadolint.yaml:/.hadolint.yaml:ro \
          hadolint/hadolint:$(versionHadolint) < "$dockerfile"
      done
    displayName: 'Linting Dockerfiles'


- job: 'Alpine'
  condition: and(startsWith(variables['Build.SourceBranch'], 'refs/tags'), succeeded('Linter'))
  dependsOn: 'Linter'
  pool:
    vmImage: 'ubuntu-16.04'
  strategy:
    maxParallel: 3
    matrix:
      alpine36:
        buildVersion: '3.6'
        buildArch: '--amd64 --i386 --armhf --aarch64'
        buildLatest: '--no-latest'
      alpine37:
        buildVersion: '3.7'
        buildArch: '--amd64 --i386 --armhf --aarch64'
        buildLatest: '--no-latest'
      alpine38:
        buildVersion: '3.8'
        buildArch: '--amd64 --i386 --armhf --aarch64'
        buildLatest: '--no-latest'
      alpine39:
        buildVersion: '3.9'
        buildArch: '--all'
        buildLatest: ''
  steps:
  - script: sudo docker login -u $(dockerUser) -p $(dockerPassword)
    displayName: 'Docker hub login'
  - script: sudo docker pull homeassistant/amd64-builder:$(versionBuilder)
    displayName: 'Install Builder'
  - script: |
      sudo docker run --rm --privileged \
        -v ~/.docker:/root/.docker \
        -v /run/docker.sock:/run/docker.sock:rw -v $(pwd):/data:ro \
        homeassistant/amd64-builder:$(versionBuilder) --base $(buildVersion) \
        $(buildArch) -t /data/alpine --docker-hub homeassistant \
        $(buildLatest) --release $(Build.SourceBranchName)
    displayName: 'Build Alpine base-images'


- job: 'Python36'
  condition: and(startsWith(variables['Build.SourceBranch'], 'refs/tags'), succeeded('Alpine'))
  dependsOn: 'Alpine'
  timeoutInMinutes: 120
  pool:
    vmImage: 'ubuntu-16.04'
  strategy:
    maxParallel: 3
    matrix:
      amd64:
        buildArch: 'amd64'
      i386:
        buildArch: 'i386'
      armhf:
        buildArch: 'armhf'
      armv7:
        buildArch: 'armv7'
      aarch64:
        buildArch: 'aarch64'
  steps:
  - script: sudo docker login -u $(dockerUser) -p $(dockerPassword)
    displayName: 'Docker hub login'
  - script: sudo docker pull homeassistant/amd64-builder:$(versionBuilder)
    displayName: 'Install Builder'
  - script: |
      sudo docker run --rm --privileged \
        -v ~/.docker:/root/.docker \
        -v /run/docker.sock:/run/docker.sock:rw -v $(pwd):/data:ro \
        homeassistant/amd64-builder:$(versionBuilder) \
        --base-python 3.6 "--$(buildArch)" -t /data/python \
        --docker-hub homeassistant --no-latest \
        --release $(Build.SourceBranchName)
    displayName: 'Build Python base-images'


- job: 'Python37'
  condition: and(startsWith(variables['Build.SourceBranch'], 'refs/tags'), succeeded('Alpine'))
  dependsOn: 'Alpine'
  timeoutInMinutes: 120
  pool:
    vmImage: 'ubuntu-16.04'
  strategy:
    maxParallel: 3
    matrix:
      amd64:
        buildArch: 'amd64'
      i386:
        buildArch: 'i386'
      armhf:
        buildArch: 'armhf'
      armv7:
        buildArch: 'armv7'
      aarch64:
        buildArch: 'aarch64'
  steps:
  - script: sudo docker login -u $(dockerUser) -p $(dockerPassword)
    displayName: 'Docker hub login'
  - script: sudo docker pull homeassistant/amd64-builder:$(versionBuilder)
    displayName: 'Install Builder'
  - script: |
      sudo docker run --rm --privileged \
        -v ~/.docker:/root/.docker \
        -v /run/docker.sock:/run/docker.sock:rw -v $(pwd):/data:ro \
        homeassistant/amd64-builder:$(versionBuilder) \
        --base-python 3.7 "--$(buildArch)" -t /data/python \
        --docker-hub homeassistant \
        --release $(Build.SourceBranchName)
    displayName: 'Build Python base-images'


- job: 'Ubuntu'
  condition: and(startsWith(variables['Build.SourceBranch'], 'refs/tags'), succeeded('Linter'))
  dependsOn: 'Linter'
  pool:
    vmImage: 'ubuntu-16.04'
  strategy:
    maxParallel: 2
    matrix:
      trusty:
        buildVersion: '14.04'
        buildArch: '--amd64 --i386 --armv7 --aarch64'
        buildLatest: '--no-latest'
      xenial:
        buildVersion: '16.04'
        buildArch: '--amd64 --i386 --armv7 --aarch64'
        buildLatest: '--no-latest'
      bionic:
        buildVersion: '18.04'
        buildArch: '--amd64 --i386 --armv7 --aarch64'
        buildLatest: ''
  steps:
  - script: sudo docker login -u $(dockerUser) -p $(dockerPassword)
    displayName: 'Docker hub login'
  - script: sudo docker pull homeassistant/amd64-builder:$(versionBuilder)
    displayName: 'Install Builder'
  - script: |
      sudo docker run --rm --privileged \
        -v ~/.docker:/root/.docker \
        -v /run/docker.sock:/run/docker.sock:rw -v $(pwd):/data:ro \
        homeassistant/amd64-builder:$(versionBuilder) \
        --base-ubuntu $(buildVersion) $(buildArch) \
        -t /data/ubuntu --docker-hub homeassistant $(buildLatest) \
        --release $(Build.SourceBranchName)
    displayName: 'Build Ubuntu base-images'


- job: 'Raspbian'
  condition: and(startsWith(variables['Build.SourceBranch'], 'refs/tags'), succeeded('Linter'))
  dependsOn: 'Linter'
  pool:
    vmImage: 'ubuntu-16.04'
  strategy:
    maxParallel: 2
    matrix:
      jessie:
        buildVersion: 'jessie'
        buildLatest: '--no-latest'
      stretch:
        buildVersion: 'stretch'
        buildLatest: ''
  steps:
  - script: sudo docker login -u $(dockerUser) -p $(dockerPassword)
    displayName: 'Docker hub login'
  - script: sudo docker pull homeassistant/amd64-builder:$(versionBuilder)
    displayName: 'Install Builder'
  - script: |
      sudo docker run --rm --privileged \
        -v ~/.docker:/root/.docker \
        -v /run/docker.sock:/run/docker.sock:rw -v $(pwd):/data:ro \
        homeassistant/amd64-builder:$(versionBuilder) \
        --base-raspbian $(buildVersion) --armhf \
        -t /data/raspbian --docker-hub homeassistant $(buildLatest) \
        --release $(Build.SourceBranchName)
    displayName: 'Build Ubuntu base-images'
