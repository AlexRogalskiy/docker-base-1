# This azure pipeline template build add-ons

parameters:
  version: ''
  name: ''
  args: ''

jobs:

- job: 'Python${{ parameters.name }}'
  dependsOn: 'Alpine'
  timeoutInMinutes: 360
  strategy:
    matrix:
      amd64:
        buildArch: 'amd64'
        agentArch: 'X64'
        builderArch: 'amd64'
      i386:
        buildArch: 'i386'
        agentArch: 'X64'
        builderArch: 'amd64'
      armhf:
        buildArch: 'armhf'
        agentArch: 'ARM'
        builderArch: 'aarch64'
      armv7:
        buildArch: 'armv7'
        agentArch: 'ARM'
        builderArch: 'aarch64'
      aarch64:
        buildArch: 'aarch64'
        agentArch: 'ARM'
        builderArch: 'aarch64'
  pool:
    name: BuildCluster
    demands:
    - Agent.OSArchitecture -equals $(agentArch)
  steps:
  - script: docker login -u $(dockerUser) -p $(dockerPassword)
    displayName: 'Docker hub login'
  - script: docker pull homeassistant/amd64-builder:$(versionBuilder)
    displayName: 'Install Builder'
  - script: |
      container_id="$(Build.BuildNumber)-$(buildArch)-${{ parameters.name }}"

      docker create --name "${container_id}" -t --privileged \
        -v /run/docker.sock:/run/docker.sock:ro \
        homeassistant/$(builderArch)-builder:$(versionBuilder) \
        --base-python ${{ parameters.version }} "--$(buildArch)" -t /data/python \
        --docker-hub homeassistant ${{ parameters.args }} \
        --release $(Build.SourceBranchName)

      docker cp -a /root/.docker/ "${container_id}:/root/.docker"
      docker cp -a python/ "${container_id}:/data/python"

      docker start -a "${container_id}"
    displayName: 'Build Python ${{ parameters.version }} base-images'
  - script: |
      docker rm -f "$(Build.BuildNumber)-$(buildArch)-${{ parameters.name }}"
    displayName: 'Cleanup wheels build'
    condition: always()
